# 使用包含GCC的Golang Alpine基础镜像
FROM golang:1.24-alpine AS builder

# 设置Go代理环境变量（加速国内构建）
ENV GOPROXY=https://goproxy.cn,direct
ENV GOSUMDB=sum.golang.google.cn

# 安装必要的系统依赖，包括gcc（用于CGO）和SQLite开发库
RUN apk --no-cache add git gcc musl-dev sqlite-dev

# 设置工作目录
WORKDIR /app

# 复制go.mod和go.sum文件并下载依赖
COPY go.mod go.sum ./
RUN go mod download

# 复制项目代码
COPY . .

# 构建crypto_demo.go，启用CGO以支持SQLite
RUN CGO_ENABLED=1 GOOS=linux go build -o crypto_demo crypto_demo.go

# 运行阶段，使用Alpine作为基础镜像
FROM alpine:3.20

# 安装必要的运行时依赖，包括gcc库和SQLite
RUN apk --no-cache add ca-certificates gcc libgcc sqlite

# 创建非root用户运行应用
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# 设置工作目录
WORKDIR /app

# 从构建阶段复制二进制文件
COPY --from=builder /app/crypto_demo .

# 创建必要的目录并设置权限
RUN mkdir -p logs && chown -R appuser:appgroup /app

# 切换到非root用户
USER appuser

# 设置启动命令
CMD ["./crypto_demo"]